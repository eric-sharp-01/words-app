{"version":3,"file":"main.452ddb1c830251e881b0.hot-update.js","sources":["C:/Users/Administrator/Desktop/ClientApp/words-app/src/components/Notebook.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport {\r\n  withRouter, RouteComponentProps\r\n} from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nlet mapDispatchToProps = {\r\n    openModal: (value: string) => ({type: \"OPEN_MODAL\", payload: value}),\r\n    closeModal: () => ({type: \"CLOSE_MODAL\", payload: null}),\r\n    setWord: (value: string) => ({type: \"SET_WORD\", payload: value}),\r\n}\r\n\r\nlet connector = connect(null, mapDispatchToProps);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux, RouteComponentProps{\r\n\r\n}\r\n\r\ninterface State{\r\n    words: string[],\r\n    inProgress: boolean\r\n}\r\n\r\n\r\nclass Notebook extends Component<Props, State> {\r\n    constructor(props: Readonly<Props>) {\r\n        super(props);\r\n        this.state = {\r\n            words: [],\r\n            inProgress: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/api/words/all\").then(res => res.json()).then(res => {\r\n            let words = res.words.sort();\r\n\r\n            this.setState({ words, inProgress: false });\r\n        });\r\n    }\r\n\r\n    handleClick = (e:React.MouseEvent) => {\r\n        let name = e.currentTarget.getAttribute('data-word');\r\n        this.props.setWord(name);\r\n        this.props.history.push(\"/\");\r\n    }\r\n    render() {\r\n        let content = null;\r\n        if(this.state.inProgress){\r\n            content = <LinearProgress />;\r\n        }else{\r\n            let list = this.state.words.map((word, index) => {\r\n                return (\r\n                    <Grid item xs={6} sm={4} md={2} key={index}>\r\n                        <Paper className=\"word-card\">\r\n                            <Button variant=\"contained\" onClick={this.handleClick} data-word={word} color=\"primary\">\r\n                                {word}\r\n                            </Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                );\r\n            });\r\n            content = <Grid container spacing={1}>{list}</Grid>\r\n        }\r\n\r\n        return <Container maxWidth=\"lg\" fixed className=\"notebook\">\r\n            <h4>Notebook</h4>\r\n            <Grid container spacing={1} className=\"grid-container\">\r\n                {content}\r\n            </Grid>\r\n        </Container>;\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Notebook));"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AAYA;AACA;AACA;AACA;AAFA;AAiBA;AACA;AACA;AACA;AACA;AAnhDA;AACA;AAiDA;;;;A","sourceRoot":""}