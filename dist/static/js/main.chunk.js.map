{"version":3,"file":"static/js/main.chunk.js","sources":["C:/Users/Administrator/Desktop/ClientApp/words-app/src/scss/index.scss","C:/Users/Administrator/Desktop/ClientApp/words-app/src/App.tsx","C:/Users/Administrator/Desktop/ClientApp/words-app/src/components/Home.tsx","C:/Users/Administrator/Desktop/ClientApp/words-app/src/components/Navbar.tsx","C:/Users/Administrator/Desktop/ClientApp/words-app/src/components/Notebook.tsx","C:/Users/Administrator/Desktop/ClientApp/words-app/src/index.js","webpack:///./src/scss/index.scss?07e4"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n  background-image: url(\\\"/bg.jpg\\\"); }\\n  body .home .home-header {\\n    color: white;\\n    font-weight: bold;\\n    font-size: 80px;\\n    padding: 10px 15px;\\n    background: rgba(33, 33, 33, 0.45);\\n    border-radius: 10px;\\n    display: flex;\\n    justify-content: center;\\n    width: 420px;\\n    margin: auto;\\n    margin-bottom: 15px; }\\n    body .home .home-header .icon-block {\\n      display: flex;\\n      padding-right: 10px; }\\n      body .home .home-header .icon-block svg {\\n        font-size: 40px; }\\n    body .home .home-header .text-block {\\n      color: white;\\n      font-size: 90px; }\\n  body .home .home-main .word-search .paper {\\n    padding: 2px 4px;\\n    display: flex;\\n    align-items: center; }\\n  body .home .home-main .word-search .input-base {\\n    flex: 1 1;\\n    padding-left: 15px; }\\n  body .home .home-main .word-search .icon-button {\\n    padding: 10px; }\\n  body .home .home-main .word-search .divider {\\n    height: 28px;\\n    margin: 4px; }\\n  body .home .home-main .word-list {\\n    background: white;\\n    margin-top: 20px;\\n    max-height: 500px;\\n    overflow: auto; }\\n    body .home .home-main .word-list .word-item .word-def {\\n      color: #303336;\\n      font-size: 18px;\\n      font-stretch: normal;\\n      letter-spacing: .2px;\\n      line-height: 22px; }\\n      body .home .home-main .word-list .word-item .word-def span:nth-child(1) {\\n        padding-right: 10px;\\n        color: gray;\\n        font-size: 16px; }\\n  body .notebook h4 {\\n    text-align: center;\\n    color: white;\\n    font-weight: bold;\\n    font-size: 30px;\\n    margin-bottom: 10px;\\n    background: linear-gradient(45deg, #132b7d, rgba(14, 121, 204, 0.5));\\n    padding: 10px;\\n    border-radius: 5px; }\\n  body .notebook .grid-container {\\n    padding: 10px;\\n    border-radius: 10px;\\n    border: 2px solid #ececec; }\\n    body .notebook .grid-container .word-card {\\n      color: rgba(0, 0, 0, 0.54);\\n      text-align: center;\\n      cursor: pointer; }\\n      body .notebook .grid-container .word-card button {\\n        width: 100%;\\n        text-transform: capitalize; }\\n\\n.flex-1 {\\n  flex: 1 1; }\\n\\n.nav-menu {\\n  width: 300px;\\n  margin-top: 20px; }\\n  .nav-menu a {\\n    text-decoration: none;\\n    color: inherit; }\\n\\n.modal {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  .modal .modal-main {\\n    background: white;\\n    padding: 10px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport Home from './components/Home';\r\nimport Notebook from './components/Notebook';\r\nimport Navbar from './components/Navbar';\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        isModalOpen: state.isModalOpen,\r\n        modalContent: state.modalContent\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    openModal: (value: string) => ({type: \"OPEN_MODAL\", payload: value}),\r\n    closeModal: () => ({type: \"CLOSE_MODAL\", payload: null})\r\n}\r\n\r\nlet connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ninterface Props extends ConnectedProps<typeof connector> {\r\n}\r\n\r\ninterface State{\r\n}\r\n\r\nclass App extends Component<Props, State> {\r\n    constructor(props: Readonly<Props>){\r\n        super(props);\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar />\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/notebook\" component={Notebook} />\r\n                        <Route exact path=\"/\" component={Home} />\r\n                    </Switch>\r\n                </div>\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={\"modal\"}\r\n                    open={this.props.isModalOpen}\r\n                    onClose={this.closeModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.props.isModalOpen}>\r\n                        <div className={\"modal-main\"}>\r\n                            <p id=\"transition-modal-description\">{this.props.modalContent}</p>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n// wrapping the component within the connect HOC and calling the default function directly\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport {\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport { Container, Fade } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Input } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport List  from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        currentWord: state.currentWord\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    openModal: (value: string) => ({type: \"OPEN_MODAL\", payload: value}),\r\n    closeModal: () => ({type: \"CLOSE_MODAL\", payload: null})\r\n}\r\n\r\nlet connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ninterface Props extends ConnectedProps<typeof connector> {\r\n}\r\n\r\ninterface Definition{\r\n    partOfSpeech: string,\r\n    definition: string\r\n}\r\n\r\ninterface State{\r\n    searchText: string,\r\n    definitions: Definition[],\r\n    word: string | null,\r\n    addToDict: boolean,\r\n    isOpenAlert: boolean,\r\n    inProgress: boolean,\r\n    [k: string]: string | boolean | Definition[] | null;\r\n}\r\n\r\nclass Home extends Component<Props, State> {\r\n    constructor(props: Readonly<Props>) {\r\n        super(props);\r\n        this.state = {\r\n            definitions: [],\r\n            searchText: \"\",\r\n            word: null,\r\n            addToDict: false,\r\n            isOpenAlert: false,\r\n            inProgress: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.currentWord){\r\n            this.setState({ searchText: this.props.currentWord }, this.search);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<Props>){\r\n    }\r\n\r\n    search = () => {\r\n        if(!this.state.searchText) return;\r\n        \r\n        this.setState({inProgress: true});\r\n        let text = this.state.searchText;\r\n        fetch(`/api/words?name=${text}`).then(res => res.json()).then(res => {\r\n            if(!res.data){\r\n                this.setState({ definitions: [], addToDict: false });\r\n                return;\r\n            }\r\n            let definitions = res.data.definitions.sort((a: Definition, b:Definition) => (a.partOfSpeech > b.partOfSpeech ? 1 : -1));\r\n            let addToDict = res.addToDict;\r\n            this.setState({ definitions, addToDict, inProgress: false });\r\n        });\r\n    }\r\n\r\n    add = () => {\r\n        this.setState({ inProgress: true });\r\n        let word = this.state.searchText;\r\n        fetch(`/api/words`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ word }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ addToDict: false, isOpenAlert: data.flag });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                this.setState({ inProgress: false });\r\n                alert();\r\n        });\r\n    }\r\n\r\n    enter = (e: React.KeyboardEvent) => {\r\n        if (e.which !== 13) return;\r\n        this.search();\r\n    }\r\n\r\n    change = (field: string, value: string) => {\r\n        this.setState({\r\n            [field]: value\r\n        });\r\n    }\r\n\r\n    closeAlert = () => {\r\n        this.setState(prev => ({\r\n            isOpenAlert: !prev.isOpenAlert\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let wordList = null;\r\n        if(this.state.inProgress){\r\n            wordList = <LinearProgress />;\r\n        }else{\r\n            if(this.state.definitions.length){\r\n                let list = this.state.definitions.map((item: Definition, index) => {\r\n                    return <React.Fragment key={index}>\r\n                            <ListItem button>\r\n                                <ListItemText primary={item.definition} secondary={item.partOfSpeech} />\r\n                            </ListItem>\r\n                            <Divider component=\"li\" />\r\n                        </React.Fragment>;\r\n                });\r\n        \r\n                wordList = <List className=\"word-list\">\r\n                    {list}\r\n                </List>;\r\n            }\r\n        }\r\n        return (\r\n        <Container maxWidth=\"lg\" fixed className=\"home\">\r\n            <div className=\"home-header\">\r\n                <div className=\"text-block\">\r\n                    WORDS\r\n                </div>\r\n            </div>\r\n            <div className=\"home-main\">\r\n                <div className=\"word-search\">\r\n                    <Paper component=\"div\" elevation={3}  className=\"paper\">\r\n                        <Input \r\n                            type=\"text\" \r\n                            onKeyPress={this.enter} \r\n                            className=\"input-base flex-1\" \r\n                            value={this.state.searchText} \r\n                            onChange={(e) => this.change('searchText', e.target.value)} \r\n                        />\r\n                        <IconButton type=\"button\" className=\"icon-button\" aria-label=\"search\" onClick={this.search}>\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                        <Divider className=\"divider\" orientation=\"vertical\" />\r\n                        <IconButton color=\"primary\" className=\"icon-button\" disabled={!this.state.addToDict} onClick={this.add}>\r\n                            <AddToPhotosIcon />\r\n                        </IconButton>\r\n                    </Paper>\r\n                </div>\r\n                {wordList}\r\n                <Snackbar open={this.state.isOpenAlert} autoHideDuration={2000} onClose={this.closeAlert} TransitionComponent={Fade}>\r\n                    <MuiAlert elevation={6} variant=\"filled\" onClose={this.closeAlert} severity=\"success\">\r\n                        The word is saved.\r\n                    </MuiAlert>\r\n                </Snackbar>\r\n            </div>\r\n        </Container>);\r\n    }\r\n}\r\n\r\nexport default withRouter(connector(Home));","import React, { Component } from 'react';\r\nimport {\r\n  withRouter, RouteComponentProps\r\n} from 'react-router-dom';\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\ninterface Props extends RouteComponentProps{\r\n\r\n}\r\n\r\ninterface State{\r\n    isDrawerOpen: boolean\r\n}\r\n\r\nclass Navbar extends Component<Props, State> {\r\n    constructor(props: Readonly<Props>) {\r\n        super(props);\r\n        this.state = {\r\n            isDrawerOpen: false\r\n        }\r\n    }\r\n    toggleDrawer = () => {\r\n        this.setState(prev => ({ isDrawerOpen: !prev.isDrawerOpen }));\r\n    }\r\n\r\n    go = (path: string) => {\r\n        this.toggleDrawer();\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-block\">\r\n                <Button onClick={this.toggleDrawer}>\r\n                    <MenuIcon />\r\n                </Button>\r\n                <SwipeableDrawer anchor={'left'} open={this.state.isDrawerOpen} onOpen={this.toggleDrawer} onClose={this.toggleDrawer} className=\"drawer\">\r\n                    <List className=\"nav-menu\">\r\n                        <ListItem button onClick={() => this.go('/')}>\r\n                            <ListItemIcon>\r\n                                <HomeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button onClick={() => this.go('/notebook')}>\r\n                            <ListItemIcon>\r\n                                <MenuBookIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Notebook\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </SwipeableDrawer>\r\n            </div>);\r\n    }\r\n}\r\n\r\n// wrapping the component within the connect HOC and calling the default function directly\r\nexport default withRouter(Navbar);","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport {\r\n  withRouter, RouteComponentProps\r\n} from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nlet mapDispatchToProps = {\r\n    openModal: (value: string) => ({type: \"OPEN_MODAL\", payload: value}),\r\n    closeModal: () => ({type: \"CLOSE_MODAL\", payload: null}),\r\n    setWord: (value: string) => ({type: \"SET_WORD\", payload: value}),\r\n}\r\n\r\nlet connector = connect(null, mapDispatchToProps);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux, RouteComponentProps{\r\n\r\n}\r\n\r\ninterface State{\r\n    words: string[],\r\n    inProgress: boolean\r\n}\r\n\r\n\r\nclass Notebook extends Component<Props, State> {\r\n    constructor(props: Readonly<Props>) {\r\n        super(props);\r\n        this.state = {\r\n            words: [],\r\n            inProgress: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/api/words/all\").then(res => res.json()).then(res => {\r\n            let words = res.words.sort();\r\n\r\n            this.setState({ words, inProgress: false });\r\n        });\r\n    }\r\n\r\n    handleClick = (e:React.MouseEvent) => {\r\n        let name = e.currentTarget.getAttribute('data-word') || \"\";\r\n        this.props.setWord(name);\r\n        this.props.history.push(\"/\");\r\n    }\r\n    render() {\r\n        let content = null;\r\n        if(this.state.inProgress){\r\n            content = <LinearProgress />;\r\n        }else{\r\n            let list = this.state.words.map((word, index) => {\r\n                return (\r\n                    <Grid item xs={6} sm={4} md={2} key={index}>\r\n                        <Paper className=\"word-card\">\r\n                            <Button variant=\"contained\" onClick={this.handleClick} data-word={word} color=\"primary\">\r\n                                {word}\r\n                            </Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                );\r\n            });\r\n            content = <Grid container spacing={1}>{list}</Grid>\r\n        }\r\n\r\n        return <Container maxWidth=\"lg\" fixed className=\"notebook\">\r\n            <h4>Notebook</h4>\r\n            <Grid container spacing={1} className=\"grid-container\">\r\n                {content}\r\n            </Grid>\r\n        </Container>;\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Notebook));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport './scss/index.scss';\n\n\nconst reducers = (state = intialState, action) => {\n  switch(action.type){\n    case \"OPEN_MODAL\":\n      return {\n        ...state,\n        isModalOpen: true,\n        modalContent: action.payload\n      };\n    case \"CLOSE_MODAL\":\n      return {\n        ...state,\n        isModalOpen: false,\n        modalContent: \"\"\n      };\n    case \"SET_WORD\":\n      console.log(action.payload);\n      return {\n        ...state,\n        currentWord: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nlet intialState = {\n  isModalOpen: false,\n  modalContent: \"\",\n  currentWord: \"\"\n}\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/resolve-url-loader/index.js??ref--6-oneOf-5-3!../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-5-4!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/resolve-url-loader/index.js??ref--6-oneOf-5-3!../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-5-4!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/resolve-url-loader/index.js??ref--6-oneOf-5-3!../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-5-4!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAEA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAOA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAJA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAxCA;AACA;AACA;AA0CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAmBA;AACA;AACA;AACA;AAFA;AAsBA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AApCA;AAsCA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAzDA;AA2DA;AACA;AACA;AACA;AA9DA;AAgEA;AACA;AADA;AAGA;AACA;AApEA;AAsEA;AACA;AADA;AAGA;AACA;AAxEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAwnIA;AACA;AAoIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvxCA;AACA;AACA;AAyCA;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AAYA;AACA;AACA;AACA;AAFA;AAiBA;AACA;AACA;AACA;AACA;AAnhDA;AACA;AAiDA;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AApBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;A","sourceRoot":""}